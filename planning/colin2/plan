#!/usr/bin/perl -w
use File::Basename;

if ((scalar @ARGV) != 4) {
	print "Usage: plan <domain> <problem> <solution> <timing>\n";
	exit(1);
}

$dir = dirname(__FILE__);
$dom = shift @ARGV;
$prob = shift @ARGV;
$soln = shift @ARGV;
$timing = shift @ARGV;

if (!(-e $dom)) {
	print "Domain file $dom not found\n";
	exit(1);
}

if (!(-e $prob)) {
  print "Problem file $prob not found\n";
  exit(1);
}

system("$dir/bin/colin-clp", "-E", "-a", "$soln", "-y", "$timing", "$dom", "$prob");
# get return value of the executable
$exit_code = $? >> 8;
exit($exit_code);
#exec("$dir/bin/colin-clp", "-e", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-b", "-e", "-a", "$soln", "-y", "$timing", "$dom", "$prob")

#exec("$dir/bin/colin-clp", "-v3", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-e", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-C", "-b", "-e", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-b", "-e", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-C", "-E", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-C", "-e", "-a", "$soln", "-y", "$timing", "$dom", "$prob")
#exec("$dir/bin/colin-clp", "-C", "-a", "$soln", "-y", "$timing", "$dom", "$prob")

#COLIN, Release 2
#By releasing this code we imply no warranty as to its reliability
#and its use is entirely at your own risk.
#
#Usage: ../colin2/bin/colin-clp [OPTIONS] domainfile problemfile [planfile, if -r specified]
#
#Options are: 
#
#	-citation	Display citation to relevant conference paper (ICAPS 2010);
#	-b		Disable best-first search - if EHC fails, abort;
#	-E		Skip EHC: go straight to best-first search;
#	-e		Use standard EHC instead of steepest descent;
#	-h		Disable helpful-action pruning;
#	-k		Disable compression-safe action detection;
#	-M		Disable the tie-breaking in search that favours plans with shorter makespans;
#	-F		Full FF helpful actions (rather than just those in the RP applicable in the current state);
#	-r		Read in a plan instead of planning;
#	-T		Rather than building a partial order, build a total-order
#	-a		Plan output file
#	-y		Timing output file
#	-v<n>		Verbose to degree n (n defaults to 1 if not specified).
#	-L<n>		LP verbose to degree n (n defaults to 1 if not specified).
